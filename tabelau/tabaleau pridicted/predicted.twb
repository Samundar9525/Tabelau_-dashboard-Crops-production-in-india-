<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.19.1211.1636                               -->
<workbook original-version='18.1' source-build='2019.4.1 (20194.19.1211.1636)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='area_input' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='10.0'>
        <calculation class='tableau' formula='10.0' />
      </column>
      <column caption='production_input' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='5.0'>
        <calculation class='tableau' formula='5.0' />
      </column>
    </datasource>
    <datasource caption='babu (babu)' inline='true' name='federated.0t2ljry19vs0fs114hqnx13fx8gn' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='babu' name='excel-direct.0lkbuql1hsf1ix12rnybq0jzysoe'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Semester 4/LAB/LAB---DATA Sci/final/tabaleau pridicted/babu.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0lkbuql1hsf1ix12rnybq0jzysoe' name='babu' table='[babu$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='string' name='area' ordinal='0' />
            <column datatype='string' name='production' ordinal='1' />
            <column datatype='string' name='yields' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>area</remote-name>
            <remote-type>130</remote-type>
            <local-name>[area]</local-name>
            <parent-name>[babu]</parent-name>
            <remote-alias>area</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>production</remote-name>
            <remote-type>130</remote-type>
            <local-name>[production]</local-name>
            <parent-name>[babu]</parent-name>
            <remote-alias>production</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>yields</remote-name>
            <remote-type>130</remote-type>
            <local-name>[yields]</local-name>
            <parent-name>[babu]</parent-name>
            <remote-alias>yields</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[babu]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='predictive_yield' datatype='real' name='[Calculation_1046523999182139392]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#13;&#10;import numpy as np &#13;&#10;import pandas as pd &#13;&#10;from sklearn.model_selection import train_test_split &#13;&#10;from sklearn.linear_model import LinearRegression &#13;&#10;from sklearn.preprocessing import StandardScaler&#13;&#10;from ast import literal_eval&#13;&#10;&#13;&#10;d={&#13;&#10;&apos;ar&apos;:literal_eval(_arg1[0]),&#13;&#10;&apos;pro&apos;:literal_eval(_arg2[0]),&#13;&#10;&apos;yld&apos;:literal_eval(_arg3[0])&#13;&#10;}&#13;&#10;df=pd.DataFrame(d)&#13;&#10;X=df.iloc[:,:2]&#13;&#10;y=df.iloc[:,2]&#13;&#10;X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.50,random_state=0)&#13;&#10;regr = LinearRegression()&#13;&#10;regr.fit(X_train, y_train) &#13;&#10;arr=[_arg4[0],_arg5[0]]&#13;&#10;res=regr.predict([arr])[0]&#13;&#10;return res&#13;&#10;&quot;,ATTR([area]),ATTR([production]),ATTR([yields]),[Parameters].[Parameter 1],[Parameters].[Parameter 2])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='total area' datatype='real' name='[maximum (copy)_1046523999202439175]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#13;&#10;import numpy as np &#13;&#10;import pandas as pd &#13;&#10;from sklearn.preprocessing import StandardScaler&#13;&#10;from ast import literal_eval&#13;&#10;&#13;&#10;d={&#13;&#10;&apos;area&apos;:literal_eval(_arg1[0])&#13;&#10;}&#13;&#10;li=[] &#13;&#10;for i in  d[&apos;area&apos;]:&#13;&#10;    li.append(i)&#13;&#10;print(li)&#13;&#10;&#13;&#10;return li&#13;&#10;&#13;&#10;&quot;,ATTR([area]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='maximum' datatype='real' name='[predictive_yield (copy)_1046523999192072198]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#13;&#10;import numpy as np &#13;&#10;import pandas as pd &#13;&#10;from sklearn.preprocessing import StandardScaler&#13;&#10;from ast import literal_eval&#13;&#10;&#13;&#10;d={&#13;&#10;&apos;yld&apos;:literal_eval(_arg1[0])&#13;&#10;}&#13;&#10;df=pd.DataFrame(d)&#13;&#10;&#13;&#10;print(max(df[&apos;yld&apos;]))&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;return max(df[&apos;yld&apos;])&#13;&#10;&#13;&#10;&quot;,ATTR([yields]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.342912' measure-ordering='alphabetic' measure-percentage='0.363985' parameter-percentage='0.293103' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='area_input' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='10.0'>
          <calculation class='tableau' formula='10.0' />
        </column>
        <column caption='production_input' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='5.0'>
          <calculation class='tableau' formula='5.0' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='babu (babu)' name='federated.0t2ljry19vs0fs114hqnx13fx8gn' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='area_input' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='10.0'>
              <calculation class='tableau' formula='10.0' />
            </column>
            <column caption='production_input' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='5.0'>
              <calculation class='tableau' formula='5.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0t2ljry19vs0fs114hqnx13fx8gn'>
            <column caption='predictive_yield' datatype='real' name='[Calculation_1046523999182139392]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#13;&#10;import numpy as np &#13;&#10;import pandas as pd &#13;&#10;from sklearn.model_selection import train_test_split &#13;&#10;from sklearn.linear_model import LinearRegression &#13;&#10;from sklearn.preprocessing import StandardScaler&#13;&#10;from ast import literal_eval&#13;&#10;&#13;&#10;d={&#13;&#10;&apos;ar&apos;:literal_eval(_arg1[0]),&#13;&#10;&apos;pro&apos;:literal_eval(_arg2[0]),&#13;&#10;&apos;yld&apos;:literal_eval(_arg3[0])&#13;&#10;}&#13;&#10;df=pd.DataFrame(d)&#13;&#10;X=df.iloc[:,:2]&#13;&#10;y=df.iloc[:,2]&#13;&#10;X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.50,random_state=0)&#13;&#10;regr = LinearRegression()&#13;&#10;regr.fit(X_train, y_train) &#13;&#10;arr=[_arg4[0],_arg5[0]]&#13;&#10;res=regr.predict([arr])[0]&#13;&#10;return res&#13;&#10;&quot;,ATTR([area]),ATTR([production]),ATTR([yields]),[Parameters].[Parameter 1],[Parameters].[Parameter 2])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='SUM(0)' datatype='integer' name='[Calculation_1046523999190097924]' role='measure' type='quantitative' user:unnamed='Sheet 1'>
              <calculation class='tableau' formula='SUM(0)' />
            </column>
            <column datatype='string' name='[area]' role='dimension' type='nominal' />
            <column caption='maximum' datatype='real' name='[predictive_yield (copy)_1046523999192072198]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#13;&#10;import numpy as np &#13;&#10;import pandas as pd &#13;&#10;from sklearn.preprocessing import StandardScaler&#13;&#10;from ast import literal_eval&#13;&#10;&#13;&#10;d={&#13;&#10;&apos;yld&apos;:literal_eval(_arg1[0])&#13;&#10;}&#13;&#10;df=pd.DataFrame(d)&#13;&#10;&#13;&#10;print(max(df[&apos;yld&apos;]))&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;return max(df[&apos;yld&apos;])&#13;&#10;&#13;&#10;&quot;,ATTR([yields]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[production]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1046523999182139392]' derivation='User' name='[usr:Calculation_1046523999182139392:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_1046523999190097924]' derivation='User' name='[usr:Calculation_1046523999190097924:qk]' pivot='key' type='quantitative' />
            <column-instance column='[predictive_yield (copy)_1046523999192072198]' derivation='User' name='[usr:predictive_yield (copy)_1046523999192072198:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column datatype='string' name='[yields]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0t2ljry19vs0fs114hqnx13fx8gn].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0t2ljry19vs0fs114hqnx13fx8gn].[usr:Calculation_1046523999182139392:qk]&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0t2ljry19vs0fs114hqnx13fx8gn].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.0t2ljry19vs0fs114hqnx13fx8gn].[usr:Calculation_1046523999190097924:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.0t2ljry19vs0fs114hqnx13fx8gn].[usr:Calculation_1046523999190097924:qk]' scope='rows' value='false' />
            <format attr='display' class='1' field='[federated.0t2ljry19vs0fs114hqnx13fx8gn].[usr:Calculation_1046523999190097924:qk]' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0t2ljry19vs0fs114hqnx13fx8gn].[usr:Calculation_1046523999190097924:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <wedge-size column='[federated.0t2ljry19vs0fs114hqnx13fx8gn].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2.9060773849487305' />
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0t2ljry19vs0fs114hqnx13fx8gn].[usr:Calculation_1046523999190097924:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0t2ljry19vs0fs114hqnx13fx8gn].[usr:predictive_yield (copy)_1046523999192072198:qk]' />
              <text column='[federated.0t2ljry19vs0fs114hqnx13fx8gn].[usr:Calculation_1046523999182139392:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontalignment='0'>Predicted Yields</run>
                <run>Æ&#10;</run>
                <run bold='true' fontname='Tableau Bold' fontsize='12'>&lt;[federated.0t2ljry19vs0fs114hqnx13fx8gn].[usr:Calculation_1046523999182139392:qk]&gt; </run>
                <run bold='true' fontname='Tableau Bold' fontsize='8'>(per ha)</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
                <format attr='wrap' value='on' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='2' />
                <format attr='mark-color' value='#ffffff' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0t2ljry19vs0fs114hqnx13fx8gn].[usr:Calculation_1046523999190097924:qk] + [federated.0t2ljry19vs0fs114hqnx13fx8gn].[usr:Calculation_1046523999190097924:qk])</rows>
        <cols />
      </table>
      <simple-id uuid='{5804BF72-0789-46DC-ABF1-C1A57A70972F}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='area_input' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='10.0'>
          <calculation class='tableau' formula='10.0' />
        </column>
        <column caption='production_input' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='5.0'>
          <calculation class='tableau' formula='5.0' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97516' id='7' param='horz' type='layout-flow' w='98438' x='781' y='1242'>
            <zone fixed-size='976' h='97516' id='6' is-fixed='true' param='vert' type='layout-flow' w='98438' x='781' y='1242'>
              <zone h='6987' id='14' type='text' w='98438' x='781' y='1242'>
                <formatted-text>
                  <run fontalignment='1' fontname='Tableau Bold' fontsize='20'>Crop Yield  Prediction System</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='6832' id='9' mode='type_in' param='[Parameters].[Parameter 2]' type='paramctrl' w='15625' x='47070' y='41304'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#efebe8' />
          </zone-style>
        </zone>
        <zone h='6832' id='8' mode='type_in' param='[Parameters].[Parameter 1]' type='paramctrl' w='15625' x='47070' y='48137'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#f5f5f5' />
          </zone-style>
        </zone>
        <zone h='40528' id='3' name='Sheet 1' w='36328' x='62988' y='39130'>
          <layout-cache cell-count-w='1' minheight='116' non-cell-size-w='1' type-h='scalable' type-w='cell' />
        </zone>
        <zone h='28261' id='15' is-centered='0' is-scaled='1' param='C:/Users/samun/Desktop/project work/images/mergeimg.jpg' type='bitmap' w='97168' x='1855' y='10404' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='23' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='97516' id='22' param='vert' type='layout-flow' w='98438' x='781' y='1242'>
                <zone h='6987' id='14' type='text' w='98438' x='781' y='1242'>
                  <formatted-text>
                    <run fontalignment='1' fontname='Tableau Bold' fontsize='20'>Crop Yield  Prediction System</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='226' h='28261' id='15' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/samun/Desktop/project work/images/mergeimg.jpg' type='bitmap' w='97168' x='1855' y='10404'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40528' id='3' is-fixed='true' name='Sheet 1' w='36328' x='62988' y='39130'>
                  <layout-cache cell-count-w='1' minheight='116' non-cell-size-w='1' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6832' id='9' mode='type_in' param='[Parameters].[Parameter 2]' type='paramctrl' w='15625' x='47070' y='41304'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#efebe8' />
                  </zone-style>
                </zone>
                <zone h='6832' id='8' mode='type_in' param='[Parameters].[Parameter 1]' type='paramctrl' w='15625' x='47070' y='48137'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#f5f5f5' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{3C9FFA1C-75E1-469C-A8B2-F52DF9BCC215}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
            <card pane-specification-id='2' param='[federated.0t2ljry19vs0fs114hqnx13fx8gn].[usr:predictive_yield (copy)_1046523999192072198:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0t2ljry19vs0fs114hqnx13fx8gn].[:Measure Names]</field>
            <field>[federated.0t2ljry19vs0fs114hqnx13fx8gn].[none:area:nk]</field>
            <field>[federated.0t2ljry19vs0fs114hqnx13fx8gn].[none:production:nk]</field>
            <field>[federated.0t2ljry19vs0fs114hqnx13fx8gn].[none:yields:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D30B4EAC-2658-4501-9B01-D62B21ED2AED}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='6' />
      <device-preview selected='Tablet' visible='true' />
      <simple-id uuid='{83C470C1-0A63-463C-B107-1C57CE841074}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      hK9kb+Mpq6vrmCmDq9c3mJ/6p3WJ83cRN8HCc3uem+B/SgzDEGcAYbSJAISRJmaBhOcmyzKq
      +rN7CEmSJO4BhNEmLoGEkSYCEEaaCEAYaSIAYaSJAISRJgIQRpoIQBhpIgBhpIkAhJEmAhBG
      mghAGGkiAGGkiQCEkSYCEEaaCEAYaSIAYaSJAISRJgIQRpoIQBhpIgBhpIkAhJEmAhBGmghA
      GGkiAGGkiQCEkSYCEEaaCEAYaSIAYaSJAISRJgIQRpoIQBhpIgBhpIkAhJEmAhBGmghAGGki
      AGGkiQCEkSYCEEaaCEAYaSIAYaSJAISRJgIQRpoIQBhpIgBhpIkAhJEmAhBGmghAGGkiAGGk
      iQCEkSYCEEaaCEAYaSIAYaSJAISRJgIQRpoIQBhpIgBhpIkAhJEmAhBGmghAGGkiAGGkiQCE
      kSYCEEaaCEAYaSIAYaSJAISRJgIQRpoIQBhpIgBhpIkAhJEmAhBGmghAGGkiAGGkiQCEkSYC
      EEaaCEAYaSIAYaSJAISRJgIQRpoIQBhpIgBhpIkAhJEmAhBGmghAGGkiAGGkiQCEkfb/AJr9
      0XBrtxBrAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
